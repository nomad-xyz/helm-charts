imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

environment: development
indexer:
  image:
    repository: gcr.io/nomad-xyz/nomad-indexer
    pullPolicy: Always
    tag: "main"
  db:
    host: "{{ .Release.Name }}-postgresql"
    user: postgres
    password: postgres
    database: nomad-indexer
    port: 5432
  loglevel: info
  redis:
    url: redis://redis:6379
  overrideConfigUrl: ""
  metricsPort: 3000
  rpcs:
    {}
    # ethereum_rpc: "https://main-light.eth.linkpool.io"
    # moonbeam_rpc: "https://rpc.api.moonbeam.network"
    # ....
  core:
    rpcBatchSize: 3000
    # ref: https://kubernetes.io/docs/user-guide/compute-resources/
    resources:
      # limits:
      #   cpu:
      #   memory:
      requests:
        cpu: 500m
        memory: 900Mi
  api:
    internalPort: 3000
    replicas: 1
    ingress:
      enabled: true
      annotations: {}
    # ref: https://kubernetes.io/docs/user-guide/compute-resources/
    resources:
      # limits:
      #   cpu:
      #   memory:
      requests:
        cpu: 200m
        memory: 700Mi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80

postgresql:
  # ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
  # auth ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml#L119
  auth:
    enablePostgresUser: true # default is true, but want to be explicit on how the `postgres` user is setup
    postgresPassword: postgres
    database: nomad-indexer
  # ref: https://kubernetes.io/docs/user-guide/compute-resources/
  # TODO: re-add resource requests
  # primary:
  #   resources:
  #     requests:
  #       cpu: 2000m

prometheus-postgres-exporter:
  # ref: https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-postgres-exporter/values.yaml
  # config ref: https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-postgres-exporter/values.yaml#L101
  config:
    host: "{{ .Release.Name }}-postgresql"
    user: postgres
    password: postgres
    database: nomad-indexer
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9090"

podCommonLabels: {}

storage:
  storageClass: "standard"
  accessModes: ReadWriteOnce
  size: 10Gi
  snapshot:
    enabled: false
    name: ""

podSecurityContext:
  fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
